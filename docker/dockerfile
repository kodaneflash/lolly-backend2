# Étape 1 : Image de base
FROM node:18-slim

# Étape 2 : Installation des dépendances système
RUN apt-get update && apt-get install -y \
  curl \
  gnupg \
  dash \
  ffmpeg \
  unzip \
  wget \
  && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo "deb https://dl.yarnpkg.com/debian stable main" > /etc/apt/sources.list.d/yarn.list \
  && apt-get update && apt-get install -y yarn \
  && rm -rf /var/lib/apt/lists/*

# Étape 3 : PATH global
ENV PATH="/usr/bin:/usr/local/bin:${PATH}"

# Étape 4 : Vérifications outils
RUN ffmpeg -version && yarn --version

# Étape 5 : Installer Rhubarb
RUN mkdir -p /rhubarb && \
    wget https://github.com/DanielSWolf/rhubarb-lip-sync/releases/download/v1.14.0/Rhubarb-Lip-Sync-1.14.0-Linux.zip -O rhubarb.zip && \
    unzip rhubarb.zip -d /rhubarb && \
    mv /rhubarb/Rhubarb-Lip-Sync-1.14.0-Linux/rhubarb /usr/local/bin/rhubarb && \
    chmod +x /usr/local/bin/rhubarb && \
    rm -rf rhubarb.zip /rhubarb

# Étape 6 : Copier les fichiers Rhubarb RES (si dispo)
# Cette commande échoue silencieusement si bin/res n'existe pas (pratique pour Railway)
RUN mkdir -p /usr/local/bin/res
COPY bin/res/ /usr/local/bin/res/

# Étape 7 : Répertoire de travail principal
WORKDIR /app

# Étape 8 : Créer le dossier audios
RUN mkdir -p /app/audios

# Étape 9 : Copier le code source
COPY . .

# Étape 10 : Installation des dépendances Node.js
RUN yarn install --frozen-lockfile

# Étape 11 : Exposer le port
EXPOSE 3000

# Étape 12 : Vérification des binaires installés
RUN which rhubarb && rhubarb --version || echo "⚠️ Rhubarb not found"
RUN which ffmpeg && ffmpeg -version || echo "⚠️ FFmpeg not found"

# Étape 13 : Commande de démarrages
CMD ["node", "index.js"]
